version: '3.8'

services:
  coin-indexer-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: moonx-coin-indexer-worker
    restart: unless-stopped
    
    # Environment variables
    environment:
      # MongoDB Configuration
      - MOONX_COIN_MONGODB_URL=mongodb://mongo:27017/moonx_indexer
      - MOONX_COIN_MONGODB_DATABASE=moonx_indexer
      
      # Redis Configuration  
      - MOONX_COIN_REDIS_URL=redis://redis:6379
      - MOONX_COIN_REDIS_DB=0
      - MOONX_COIN_REDIS_KEY_PREFIX=moonx:coins
      
      # Kafka Configuration (optional)
      - MOONX_COIN_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MOONX_COIN_KAFKA_TOPIC_PREFIX=moonx
      - MOONX_COIN_KAFKA_ENABLED=false
      
      # Worker Configuration
      - MOONX_COIN_WORKER_INTERVAL_SECONDS=15
      - MOONX_COIN_WORKER_BATCH_SIZE=100
      - MOONX_COIN_MAX_BLOCKS_PER_REQUEST=2000
      - MOONX_COIN_DEFAULT_CHAIN_ID=8453
      
      # Performance Tuning
      - MOONX_COIN_MAX_CONCURRENT_CONTRACTS=4
      - MOONX_COIN_MAX_CONCURRENT_BLOCKS=3
      - MOONX_COIN_DATABASE_BATCH_SIZE=100
      - MOONX_COIN_EVENT_PROCESSING_BATCH_SIZE=50
      
      # Logging
      - MOONX_COIN_LOG_LEVEL=INFO
      - MOONX_COIN_LOG_FORMAT=json
    
    # Volumes for persistent data and logs
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config:ro  # Mount config as read-only
    
    # Dependencies
    depends_on:
      - mongo
      - redis
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "main.py", "health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 30s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB service for development/testing
  mongo:
    image: mongo:7.0
    container_name: moonx-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=moonx_indexer
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Redis service for caching
  redis:
    image: redis:7.2-alpine
    container_name: moonx-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Optional: Kafka for event streaming (disabled by default)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: moonx-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    profiles: ["kafka"]

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: moonx-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    profiles: ["kafka"]

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: moonx-network
